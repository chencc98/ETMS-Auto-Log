<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="550" height="300" title="Employee Selector" showCloseButton="true"
	 creationComplete="init()" xmlns:ui="ui.*">
	
	<mx:HTTPService showBusyCursor="true" id="httpservice" resultFormat="xml"
	 	  result="getResult(event)" fault="getFault(event)"/>
	
	<mx:Script>
		<![CDATA[
			import utils.EmployeeEvent;
			import entity.EmployeeStatus;
			import entity.ProjectStatus;
			import entity.Employee;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.collections.XMLListCollection;
			import utils.DateRandom;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var employeedata:XMLListCollection;
			
			private function init():void
			{
				this.addEventListener(Event.CLOSE, closehandler);
				closebutton.addEventListener(MouseEvent.CLICK, closehandler);
				selectbutton.addEventListener(MouseEvent.CLICK, selecthandler);
			}
			
			private function closehandler(event:Event):void
			{
				PopUpManager.removePopUp(this);
			}
			
			private function selecthandler(event:MouseEvent):void
			{
				if( dg.selectedIndex < 0 ){   //no employee select
					Alert.show("No Employee selected");
				}else if(employeedata[dg.selectedIndex].status == entity.EmployeeStatus.OVERLOAD){
					//overload employee is selected
					Alert.show("This Employee is " + entity.EmployeeStatus.OVERLOAD);
				}else{
					//Alert.show(employeedata[dg.selectedIndex].id);
					var em:Employee = new Employee();
					em.employeeid = employeedata[dg.selectedIndex].id;
					em.employeename = employeedata[dg.selectedIndex].name;
					em.employeestatus = employeedata[dg.selectedIndex].status;
					var myevent:EmployeeEvent = new EmployeeEvent("EmployeeEvent",em);
					this.dispatchEvent(myevent);
					PopUpManager.removePopUp(this);
				}
			}
			
			//the parent will call this to load the all employee
			public function loadEmployee():void
			{
				var url:String = "http://localhost:8080/FlexExamDataService/AllEmployees?t=" + utils.DateRandom.generate();
				httpservice.url = url;
				httpservice.send();
			}
			//below are handlers to handle load employee httpservice
			private function getFault(event:FaultEvent):void
			{
				Alert.show("Error when fetch Employee data with " + event.fault.faultDetail);
				PopUpManager.removePopUp(this);
			}
				
			private function getResult(event:ResultEvent):void
			{
				var em:XML = new XML(event.result);
				employeedata = new XMLListCollection( em.children() );
			}
			
		]]>
	</mx:Script>
	<mx:DataGrid x="0" y="0" width="100%" height="196" dataProvider="{employeedata}" id="dg">
		<mx:columns>
			<mx:DataGridColumn headerText="ID" dataField="id"/>
			<mx:DataGridColumn headerText="Name" dataField="name"/>
			<mx:DataGridColumn headerText="Status" dataField="status"/>
			<mx:DataGridColumn headerText="OngoingProject" dataField="ongoing">
				<mx:itemRenderer>
					<mx:Component>
						<ui:ProjectList  Type="ONGOING" width="100%"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="CompleteProject" >
				<mx:itemRenderer>
					<mx:Component>
						<ui:ProjectList Type="COMPLETE" width="100%" />
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<mx:Button x="90" y="213" label="Close" id="closebutton"/>
	<mx:Button x="17" y="213" label="OK" id="selectbutton"/>
	
</mx:TitleWindow>
